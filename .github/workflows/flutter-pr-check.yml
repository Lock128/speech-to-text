name: Flutter PR Checks

on:
  pull_request:
    branches: [ main, develop ]
    paths: [ 'speech_to_email_app/**' ]

env:
  FLUTTER_VERSION: '3.16.0'

jobs:
  pr-checks:
    name: PR Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get
        working-directory: ./speech_to_email_app

      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        working-directory: ./speech_to_email_app

      - name: Analyze code
        run: flutter analyze --fatal-infos
        working-directory: ./speech_to_email_app

      - name: Run tests with coverage
        run: flutter test --coverage
        working-directory: ./speech_to_email_app

      - name: Check test coverage
        run: |
          # Install lcov for coverage analysis
          sudo apt-get update
          sudo apt-get install -y lcov
          
          # Generate coverage report
          cd speech_to_email_app
          genhtml coverage/lcov.info -o coverage/html
          
          # Check coverage percentage
          COVERAGE=$(lcov --summary coverage/lcov.info | grep "lines" | grep -o '[0-9.]*%' | head -1 | sed 's/%//')
          echo "Test coverage: ${COVERAGE}%"
          
          # Fail if coverage is below 80%
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "❌ Test coverage is below 80% (${COVERAGE}%)"
            exit 1
          else
            echo "✅ Test coverage is acceptable (${COVERAGE}%)"
          fi

      - name: Build web (PR validation)
        run: flutter build web --dart-define=API_BASE_URL=https://api-dev.example.com
        working-directory: ./speech_to_email_app

      - name: Comment PR with results
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const fs = require('fs');
            const path = './speech_to_email_app/coverage/lcov.info';
            
            let coverage = 'N/A';
            if (fs.existsSync(path)) {
              // Parse coverage from lcov.info if available
              coverage = '✅ Coverage report generated';
            }
            
            const comment = `## 🔍 Flutter PR Check Results
            
            - **Code Analysis**: ${{ job.status == 'success' && '✅ Passed' || '❌ Failed' }}
            - **Tests**: ${{ job.status == 'success' && '✅ Passed' || '❌ Failed' }}
            - **Coverage**: ${coverage}
            - **Build**: ${{ job.status == 'success' && '✅ Passed' || '❌ Failed' }}
            
            ${job.status == 'success' ? '🎉 All checks passed! Ready for review.' : '⚠️ Some checks failed. Please review the logs.'}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });